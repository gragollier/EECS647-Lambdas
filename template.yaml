AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  EECS647-Backend

  Sample SAM Template for EECS647-Backend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"
      AllowCredentials: "'*'"
  Function:
    Timeout: 3
    CodeUri: src/
    Runtime: python3.8
    VpcConfig:
        SecurityGroupIds: 
          - sg-e7bb42e7
        SubnetIds: 
          - subnet-94eed6d9

Resources:
  CreateSubHackitFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.create_sub_hackit
      Events:
        CreateSub:
          Type: Api
          Properties:
            Path: /createsubhackit
            Method: post
  ListSubHackitsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: app.list_sub_hackits
      Events:
        ListSubs:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /listsubhackits
            Method: get
  GetSubHackitFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.get_sub_hackit
      Events:
        CreateSub:
          Type: Api
          Properties:
            Path: /gethackit
            Method: post
  CreatePostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.create_post
      Events:
        CreateSub:
          Type: Api
          Properties:
            Path: /createpost
            Method: post
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.create_user
      Events:
        CreateSub:
          Type: Api
          Properties:
            Path: /createuser
            Method: post
  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.get_user
      Events:
        CreateSub:
          Type: Api
          Properties:
            Path: /getuser
            Method: post
  GetPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.get_post
      Events:
        CreateSub:
          Type: Api
          Properties:
            Path: /getpost
            Method: post
  CreateCommentFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.create_comment
      Events:
        CreateSub:
          Type: Api
          Properties:
            Path: /createcomment
            Method: post

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
